plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id "org.sonarqube" version "4.3.1.3277"
    id "jacoco"
}

group = 'fontys.sem3'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:4.0.4'
    testImplementation 'com.playtika.testcontainers:embedded-mysql:3.0.0-RC9'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'com.azure:azure-storage-blob:12.23.0'

    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    implementation 'com.google.apis:google-api-services-oauth2:v2-rev20200213-1.32.1'
    implementation 'com.google.auth:google-auth-library-oauth2-http:0.22.2'

    implementation "com.stripe:stripe-java:24.0.0"
}

sonar {
    properties {
        property "sonar.token", "sqa_f4ebe0811f4b85da93f19bf7195d1614671b4c24"
        property "sonar.projectKey", "myProjectKey"
        property "sonar.organization", "myOrganization"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.sources", "src/main/java/fontys/sem3/proconnectbackend/business/usecases"

    }
}

tasks.named('test') {
    useJUnitPlatform()
}